<collection xmlns="http://www.loc.gov/MARC21/slim">
	<record>
		<controlfield tag="001">FIXME</controlfield>
		<datafield tag="024" ind1="7" ind2=" ">
			<subfield code="2">DOI</subfield>
			<subfield code="a">10.7483/OPENDATA.CMS.A8CP.HBJQ</subfield>
		</datafield>
		<datafield tag="100" ind1=" " ind2=" ">
			<subfield code="a">Geiser, Achim</subfield>
		</datafield>
		<datafield tag="245" ind1=" " ind2=" ">
			<subfield code="a">Validation code to produce the di-muon spectrum from a CMS 2010 primary dataset</subfield>
		</datafield>
		<datafield tag="260" ind1=" " ind2=" ">
			<subfield code="b">CERN Open Data Portal</subfield>
			<subfield code="c">2016</subfield>
		</datafield>
		<datafield tag="264" ind1=" " ind2="0">
			<subfield code="c">2016</subfield>
		</datafield>
		<datafield tag="516" ind1=" " ind2=" ">
			<subfield code="a">Use this with 2010 Mu primary datasets or any other 2010 primary datasets containing muons (see detailed instructions in code)</subfield>
			<subfield code="u">http://opendata.cern.ch/record/14</subfield>
		</datafield>
		<datafield tag="520" ind1=" " ind2=" ">
			<subfield code="a">This validation example is set up at Research level, i.e. it requires university student level programming experience.
			Minimal acquaintance with Linux, the Root analysis package https://root.cern.ch/ and a basic text editor. Note that the code in this category is not meant as a pedagogical example but as a validation tool. </subfield>
		</datafield>
		<datafield tag="538" ind1=" " ind2=" ">
			<subfield code="a">Software release: CMSSW_4_2_8</subfield>
			<subfield code="i">Use this code with the CMS Open Data VM environment</subfield>
			<subfield code="w">250</subfield>
		</datafield>
		<datafield tag="540" ind1=" " ind2=" ">
			<subfield code="a">GNU General Public License (GPL) version 3</subfield>
		</datafield>
		<datafield tag="583" ind1=" " ind2=" ">
			<subfield code="a">Only the list of validated runs are accepted:</subfield>
			<subfield code="w">1000</subfield>
		</datafield>
		<datafield tag="693" ind1=" " ind2=" ">
			<subfield code="a">CERN-LHC</subfield>
			<subfield code="e">CMS</subfield>
		</datafield>
		<datafield tag="581" ind1=" " ind2=" ">
			<subfield code="a"><![CDATA[<p> If you do not have the CMS 2010 Virtual Machine installed follow the instructions in step 1 at <a href="http://opendatadev.cern.ch/VM/CMS/2010">How to install a CERN Virtual Machine</a>. Then install and run the Demo (demo analyzer) program following the instructions at <a href="http://opendatadev.cern.ch/VM/CMS/2010#testvalidate2010">How to Test & Validate</a> </p> 
			<p>To run di-muon spectrum demo:<ul>
			<li>Download the index files for the <a href="link:http://opendatadev.cern.ch/record/14">/Mu/Run2010B-Apr21ReReco-v1/AOD</a> 
			primary data sets and store them in Demo/DemoAnalyzer/datasets/, but first you have to create the directory.</li>
			<li>Download the JSON file as instructed in <a href="link:http://opendata.cern.ch/record/1000">CMS Validated Runs</a> and save it to the Demo/DemoAnalyzer/datasets directory.</li>
			<li>After, replace the three files BuildFile.xml, demoanalyzer_cfg.py and src/Demoanalyzer.cc, by the ones from this record and read the comments in Demoanalyzer.cc if you want to understand what the program does.</li>
			<li>Then, recompile ("scram b") and rerun ("cmsRun ...") exactly as before <a href="http://opendatadev.cern.ch/VM/CMS/2010#testvalidate2010">How to Test & Validate</a>. You should get an output file Mu.root which contains histograms for 10000 input events (small subset of data). These can be looked at using a Root Browser (see above at the Description). The most interesting histogram is GM_mass_log In order to compare with <a href="https://inspirehep.net/record/1118729/plots">MUO-10-004</a> it should be viewed with the 'logy' option. Of course with low statistics the comparison is poor, but the J/psi (at log10(mass)=0.5), Upsilon (at log10(mass=0.98)) and Z (at log10(mass)=1.95) peaks should be visible.</li>
			<li>Finally, to run over more or even the full statistics, edit the relevant parts of the Python file demoanalyzer_cfg.py (see comments therein) and rerun. Add up the output histograms from different (nonoverlapping) input index files using Root tools.</li></ul></p>]]></subfield>
		</datafield>
		<datafield tag="700" ind1=" " ind2=" ">
			<subfield code="a">Dutta, Irene</subfield>
		</datafield>
		<datafield tag="700" ind1=" " ind2=" ">
			<subfield code="a">Hirvonsalo, Harri</subfield>
		</datafield>
		<datafield tag="700" ind1=" " ind2=" ">
			<subfield code="a">Sheeran, Bridget</subfield>
		</datafield>
		<datafield tag="787" ind1=" " ind2=" ">
			<subfield code="a">The example output is a ROOT file</subfield>
			<subfield code="u">FIXME: Download the files from https://cernbox.cern.ch/index.php/s/PrIBIaLSfSUbnxb</subfield>
		</datafield>
		<datafield tag="980" ind1=" " ind2=" ">
			<subfield code="a">CMS-Validation-Utilities</subfield>
		</datafield>
		<datafield tag="980" ind1=" " ind2=" ">
			<subfield code="b">Research</subfield>
		</datafield>
	</record>
</collection>
