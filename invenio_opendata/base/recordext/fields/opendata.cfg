# Data model for the CERN Open Data service.
#
# Extends Invenio's default `base.cfg` field configuration.
#
# Covers *all* existing fields and subfields used by the service.

# 0247_2 0247_a

@persistent_identifier(1)
doi:
    schema:
        {'doi': {'recommended': True, 'repeatable': False, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "0247_", get_doi(value)
    producer:
        json_for_marc(), {'0247_2': 'str("DOI")', '0247_a': ''}

# 100__a / 700__a

_first_author, first_author, creator:
    schema:
        {'_first_author': {'required': FIXME with either this or 110, 'repeatable': False, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "100__", { 'full_name':value['a'], 'first_name':util_split(value['a'],',',1), 'last_name':util_split(value['a'],',',0), 'relator_name':value['e'], 'CCID':value['h'], 'INSPIRE_number':value['i'], 'affiliation':value['u'] }
    producer:
        json_for_marc(), {"100__a": "full_name", "100__e": "relator_name", "100__h": "CCID", "100__i": "INSPIRE_number", "100__u": "affiliation"}
        json_for_dc(), {"dc:creator": "full_name"}

_additional_authors, additional_authors, contributor:
    schema:
        {'_additional_authors': {'required': False, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        @parse_first('_first_author')
        marc, "700__", {'full_name': value['a'], 'first_name':util_split(value['a'],',',1), 'last_name':util_split(value['a'],',',0), 'relator_name':value['e'], 'CCID':value['h'], 'INSPIRE_number':value['i'], 'affiliation':value['u'] }
    producer:
        json_for_marc(), {"700__a": "full_name", "700__e": "relator_name", "700__h": "CCID", "700__i": "INSPIRE_number", "700__u": "affiliation"}
        json_for_dc(), {"dc:contributor": "full_name"}

authors:
    derived:
        @parse_first('_first_author', '_additional_authors')
        @connect('_first_author', sync_authors)
        @connect('_additional_authors', sync_authors)
        @only_if('_firs_author' in self or '_additional_authors' in self)
        util_merge_fields_info_list(self, ['_first_author', '_additional_authors'])

# 110__a / 710__g
 _first_corporate_name, first_corporate_name:  
    schema:
        {'_first_corporate_name': {'required': FIXME with either this or 100, 'repeatable': False, 'type': 'list', 'force': True}}
    creator:
        marc, "110__", {'name':value['a'], 'subordinate_unit':value['b'], 'collaboration':value['g']}
    producer:
        json_for_marc(), {"110__a":"name", "110__b":"subordinate_unit", "110__":"collaboration"}


_additional_corporate_names, additional_corporate_names:
    schema:
        {'_additional_corporate_names': {'required': False, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        marc, "710__", {'name': value['a'], 'subordinate_unit': value['b'], 'collaboration': value['g']}
    producer:
        json_for_marc(), {"710__a":"name", "710__b":"subordinate_unit", "710__":"collaboration"}

corporate_names:
    derived:
        @parse_first('_first_corporate_name', '_additional_corporate_names')
        @connect('_first_corporate_name', sync_corparate_names)
        @connect('_additional_corporate_names', sync_corparate_names)
        @only_if('_first_corporate_name' in self or '_additional_corporate_names' in self)
        util_merge_fields_info_list(self, ['_first_corporate_name', '_additional_corporate_names'])

# 245__a

title:
    schema:
        {'title': {'required': True, 'repeatable': False, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "245__", { 'title':value['a'], 'subtitle':value['b'], 'version': value['s'], 'volume': value['n'], 'form':value['k'] }
    producer:
        json_for_marc(), {"245__a": "title", "245__b": "subtitle", "245__k": "form"}
        json_for_dc(), {"dc:title": "title"}

# 246__a

title_additional:
    schema:
        {'title_additional': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "246__", { 'title':value['a'], 'subtitle':value['b'], 'misc':value['g'], 'text':value['i'], 'part_number':value['n'], 'part_name':value['p']}
    producer:
        json_for_marc(), {"246__a": "title", "246__b": "subtitle", "246__g": "misc", "246__i": "text", "246__n": "part_number", "246__p": "part_name"}

# 250__a 250__b

# should not be used any longer edition_statement:
    creator:
        marc, "250__", { 'statement': value['a'], 'remainder': value['b'] }
    producer:
        json_for_marc(), {"250__a": "statement", "250__b": "remainder"}

# 256__a 256__b 256__e 256__f 256__t

computer_file_characteristics:
    schema:
        {'computer_file_characteristics': {'recommended': True, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "256__", {'characteristics': value['a'], 'bytes': value['b'], 'events': value['e'], 'files': value['f'], 'text': value['t']}
    producer:
        json_for_marc(), {"256__a": "characteristics", "256__b": "bytes", "256__e": "events", "256__f": "files", "256__t": "text"}

# 260__b 260__c

imprint:
    schema:
        {'imprint': {'required': True, 'repeatable': False, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "260__", {'place':value['a'], 'publisher_name':value['b'], 'date':value['c'], 'reprinted_editions':value['g']}
    producer:
        json_for_marc(), {"260__a": "place", "260__b": "publisher_name", "260__c": "date", "260__g": "reprinted_editions"}

# 264_0c

manufacture_date:
    schema:
        {'manufacture_date': {'required': False, 'repeatable': False, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "264_0", value['c']
    producer:
        json_for_marc(), {"264_0c": ""}

# 500__a

comment:
    schema:
        {'comment': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "500__", value['a']
    producer:
        json_for_marc(), {"500__a": ""}

# 505__g 505__t

formatted_contents_note:
    schema:
        {'formatted_contents_note': {'required': False, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        marc, "505__", {'miscellaneous': value['g'], 'title': value['t']}
    producer:
        json_for_marc(), {"505__g": "miscellaneous", "516__t": "title"}

# 516__a 516__w

computer_file_type:
    schema:
        {'computer_file_type': {'required': False, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        marc, "516__", {'note': value['a'], 'recid': value['w']}
    producer:
        json_for_marc(), {"516__a": "note", "516__w": "recid"}

# 520__a

abstract:
    schema:
        {'abstract': {'required': True, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "520__", {'summary':value['a'], 'expansion':value['b'], 'number':value['9']}
    producer:
        json_for_marc(), {"520__a": "summary", "520__b": "expansion", "520__9": "number"}
        json_for_dc(), {"dc:description": "summary"}

# 538__a 538__b 538__i 538__w

system_details:
    schema:
        {'system_details': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "538__", {'note': value['a'], 'notebis': value['b'], 'displaytext': value['i'], 'recid': value['w']}
    producer:
        json_for_marc(), {"538__a": "note", "538__b": "notebis", "538__i": "displaytext", "538__w": "recid"}

# 540__a

license:
    schema:
        {'license': {'recommended': True, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "540__", {'license':value['a'], 'imposing':value['b'], 'url':value['u'], 'material':value['3'],}
    producer:
        json_for_marc(), {"540__a": "license", "540__b": "imposing", "540__u": "url", "540__3": "material"}

# 556__a 556__w

documentation_note:
    schema:
        {'documentation_note': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "556__", {'note': value['a'], 'recid': value['w']}
    producer:
        json_for_marc(), {"556__a": "note", "556__w": "recid"}

# 567__a 567__w

methodology_note:
    schema:
        {'methodology_note': {'required': False, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        marc, "567__", {'note': value['a'], 'recid': value['w']}
    producer:
        json_for_marc(), {"567__a": "note", "567__w": "recid"}

# 581__a 581__u 581__y 581__w

material_publication_note:
    schema:
        {'material_publication_note': {'required': False, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        marc, "581__", {'note': value['a'], 'url': value['u'], 'description': value['y'], 'recid': value['w']}
    producer:
        json_for_marc(), {"581__a": "note", "581__u": "url", "581__y": "description", "581__w": "recid"}

# 583__a 583__u 583__y 583__w

action_note:
    schema:
        {'action_note': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "583__", {'action': value['a'], 'url': value['u'], 'description': value['y'], 'recid': value['w']}
    producer:
        json_for_marc(), {"583__a": "action", "583__u": "url", "583__y": "description", "583__w": "recid"}

# 693__a 693__e

accelerator_experiment:
    schema:
        {'accelerator_experiment': {'recommended': True, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "693__", {'accelerator': value['a'], 'experiment': value['e']}
    producer:
        json_for_marc(), {"693__a": "accelerator", "693__b": "experiment"}

# 772__a 772__w

supplement_parent_entry:
    schema:
        {'supplement_parent_entry': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "772__", {'heading': value['a'], 'recid': value['w']}
    producer:
        json_for_marc(), {"772__a": "heading", "772__w": "recid"}

# 774__a 774__w

constituent_unit_entry:
    schema:
        {'constituent_unit_entry': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "774__", {'heading': value['a'], 'recid': value['w']}
    producer:
        json_for_marc(), {"774__a": "heading", "774__w": "recid"}

# 777__a 777__w

issued_with_entry:
    schema:
        {'issued_with_entry': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "777__", {'heading': value['a'], 'recid': value['w']}
    producer:
        json_for_marc(), {"777__a": "heading", "777__w": "recid"}

# 787__a 787__o 787__w

other_relationship_entry:
    schema:
        {'other_relationship_entry': {'required': False, 'repeatable': True, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "787__", {'heading': value['a'], 'note': value['n'], 'other_item_identifier': value['o'], 'recid': value['w']}
    producer:
        json_for_marc(), {"787__a": "heading", "787__n": "note", "787__o": "other_item_identifier", "787__w": "recid"}

# 8564_s 8564_u

url:
    schema:
        {'url': {'recommended': True, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        @only_if_master_value((not is_local_url(value['u']), ))
        marc, "8564_", {'host_name': value['a'],
                        'access_number': value['b'],
                        'compression_information': value['c'],
                        'path':value['d'],
                        'electronic_name': value['f'],
                        'request_processor': value['h'],
                        'institution': value['i'],
                        'eformart': value['q'],
                        'settings': value['r'],
                        'size': value['s'],
                        'url': value['u'],
                        'subformat':value['x'],
                        'description':value['y'],
                        'comment':value['z']}
    producer:
        json_for_marc(), {"8564_a": "host_name", "8564_b": "access_number", "8564_c": "compression_information", "8564_d": "path", "8564_f": "electronic_name", "8564_h": "request_processor", "8564_i": "institution", "8564_q": "eformat", "8564_r": "settings", "8564_s": "file_size", "8564_u": "url", "8564_x": "subformat", "8564_y": "description", "8564_z": "comment"}
        json_for_dc(), {"dc:identifier": "url"}

# files

files:
    calculated:
        @parse_first('recid')
        @memoize()
        get_files_from_bibdoc(self.get('recid', -1))
    producer:
        json_for_marc(), {"8564_z": "comment", "8564_y": "description", "8564_q": "eformat", "8564_f": "name", "8564_s": "size", "8564_u": "url"}
        json_for_dc(), {"dc:identifier": "url"}

# 8567_2 8567_s 8567_u

electronic_location:
    schema:
        {'electronic_location': {'recommended': True, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        marc, "8567_", {'method': value['2'], 'size': value['s'], 'uri': value['u']}
    producer:
        json_for_marc(), {"8564_2": "method", "8564_s": "size", "8567_u": "uri"}

# 942__e

collision_energy:
    schema:
        {'collision_energy': {'required': False, 'repeatable': False, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "942__", value['e']
    producer:
        json_for_marc(), {"942__e": ""}

# 960__c

reprocessing_date:
    schema:
        {'reprocessing': {'required': False, 'repeatable': False, 'type':'FIXME', 'force': 'FIXME'}}
    creator:
        marc, "960__", value['c']
    producer:
        json_for_marc(), {"960__c": ""}

# 980__a 980__b

collections:
    schema:
        {'collections': {'required': True, 'repeatable': True, 'type': 'list', 'force': True}}
    creator:
        marc, "980__", {'primary': value['a'], 'secondary': value['b'], 'deleted': value['c']}
    producer:
        json_for_marc(), {"980__a": "primary", "980__b": "secondary", "980__c": "deleted"}

# virtual field: number of authors

number_of_authors:
    derived:
        @depends_on('authors')
        len(self['authors'])
