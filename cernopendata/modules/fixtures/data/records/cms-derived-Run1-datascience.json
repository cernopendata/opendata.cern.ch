[
  {
    "abstract": {
      "description": "<p>Samples in this record are in a custom root ntuple format and contain the position of the hits and information from the generator-level objects associated to the tracker hits. The samples can be used to study top quark identification algorithms that use low-level detector information such as tracker hits. Machine learning algorithms are suitable for this classification task.</p><p> They have been produced from datasets, which consists of events extracted from simulated proton-proton collision events at a center-of-mass energy of 8 TeV generated with Pythia 6 (QCD) or MadGraph2.6 and Pythia6 (top-antitop pair sample). The particles emerging from the collisions traverse through a simulation of the CMS detector. </p><p> The parent datasets of these samples contain light jets (QCD) in various energy ranges or all-hadronic high transverse momentum decays of top quarks and consist of hits from the tracking detector, reconstructed tracks, simulated tracks, generated particles, and jets clustered from the generated particles. The various objects are matched in order to reconstruct the provenance of the various hits. Samples are produced from the standard CMS format \"AODSIM\" plus a series of low-level tracker-related collections that allow the extraction of the tracker hits. </p> <p><table class=\"ui table striped\"><thead> <tr> <th align=\"left\">Data set name</th> <th align=\"left\">Description</th> <th align=\"right\">Number of events</th> <th align=\"right\">Number of files</th> </tr> </thead> <tbody> <tr> <td align=\"left\">QCD300to600</td> <td align=\"left\">QCD, flat pT hat spectrum, 300 &lt; pT hat &lt; 600 GeV</td> <td align=\"right\">1497600</td> <td align=\"right\">2496</td> </tr> <tr> <td align=\"left\">QCD400to600</td> <td align=\"left\">QCD, flat pT hat spectrum, 400 &lt; pT hat &lt; 600 GeV</td> <td align=\"right\">1989000</td> <td align=\"right\">3315</td> </tr> <tr> <td align=\"left\">QCD600to3000</td> <td align=\"left\">QCD, flat pT hat spectrum, 600 &lt; pT hat &lt; 3000 GeV</td> <td align=\"right\">2974800</td> <td align=\"right\">4959</td> </tr> <tr> <td align=\"left\">ttbar</td> <td align=\"left\">ttbar, fully hadronic decays, pT of the top/antitop greater than 400 GeV</td> <td align=\"right\">2969109</td> <td align=\"right\">4055</td> </tr> </tbody> </table></p>"
    },
    "accelerator": "CERN-LHC",
    "authors": [
      {
        "name": "Usai, Emanuele",
        "orcid": "0000-0001-9323-2107"
      },
      {
        "name": "Andrews, Michael",
        "orcid": "0000-0001-5537-4518"
      },
      {
        "name": "Burkle, Bjorn",
        "orcid": "0000-0003-1645-822X"
      },
      {
        "name": "Gleyzer, Sergei",
        "orcid": "0000-0002-6222-8102"
      },
      {
        "name": "Narain, Meenakshi",
        "orcid": "0000-0002-7857-7403"
      }
    ],
    "collections": [
      "CMS-Derived-Datasets"
    ],
    "dataset_semantics": [
      {
        "description": "global x position of the RecHit",
        "type": "std::vector<float>",
        "variable": "hit_global_x"
      },
      {
        "description": "global y position of the RecHit",
        "type": "std::vector<float>",
        "variable": "hit_global_y"
      },
      {
        "description": "global z position of the RecHit",
        "type": "std::vector<float>",
        "variable": "hit_global_z"
      },
      {
        "description": "x pos. of the hit in the local sensor coordinate",
        "type": "std::vector<float>",
        "variable": "hit_local_x"
      },
      {
        "description": "y pos. of the hit in the local sensor coordinate",
        "type": "std::vector<float>",
        "variable": "hit_local_y"
      },
      {
        "description": "x error in the local sensor coordinate",
        "type": "std::vector<float>",
        "variable": "hit_local_x_error"
      },
      {
        "description": "y error in the local sensor coordinate",
        "type": "std::vector<float>",
        "variable": "hit_local_y_error"
      },
      {
        "description": "subdetector generating the hit [1 PixelBarrel, 2 PixelEndcap, 3 TIB, 4 TID, 5 TOB, 6 TEC]",
        "type": "std::vector<unsigned int>",
        "variable": "hit_sub_det"
      },
      {
        "description": "layer/disk of the subdetector generating the hit",
        "type": "std::vector<unsigned int>",
        "variable": "hit_layer"
      },
      {
        "description": "type of sistrip hit [0 Pixel hit, 1 rphiRecHit, 2 stereoRecHit, 3 rphiRecHitUnmatched, 4 stereoRecHitUnmatched]",
        "type": "std::vector<unsigned int>",
        "variable": "hit_type"
      },
      {
        "description": "ID number of the sim track matched to the hit",
        "type": "std::vector<int>",
        "variable": "hit_simtrack_id"
      },
      {
        "description": "index of the sim track matched to the hit",
        "type": "std::vector<unsigned int>",
        "variable": "hit_simtrack_index"
      },
      {
        "description": "is the hit matched to a sim track?",
        "type": "std::vector<bool>",
        "variable": "hit_simtrack_match"
      },
      {
        "description": "index of the gen particle matched to the hit",
        "type": "std::vector<unsigned int>",
        "variable": "hit_genparticle_id"
      },
      {
        "description": "PDG ID of the gen particle matched to the hit",
        "type": "std::vector<int>",
        "variable": "hit_pdgid"
      },
      {
        "description": "index of the reco track matched to the hit",
        "type": "std::vector<unsigned int>",
        "variable": "hit_recotrack_id"
      },
      {
        "description": "is the hit matched to a reco track?",
        "type": "std::vector<bool>",
        "variable": "hit_recotrack_match"
      },
      {
        "description": "is the hit matched to a gen particle?",
        "type": "std::vector<bool>",
        "variable": "hit_genparticle_match"
      },
      {
        "description": "index of the gen jet matched to the hit",
        "type": "std::vector<unsigned int>",
        "variable": "hit_genjet_id"
      },
      {
        "description": "is the hit matched to a gen jet?",
        "type": "std::vector<bool>",
        "variable": "hit_genjet_match"
      },
      {
        "description": "ID number of the sim track",
        "type": "std::vector<unsigned int>",
        "variable": "simtrack_id"
      },
      {
        "description": "PDG ID of the sim track",
        "type": "std::vector<int>",
        "variable": "simtrack_pdgid"
      },
      {
        "description": "charge of the sim track",
        "type": "std::vector<int>",
        "variable": "simtrack_charge"
      },
      {
        "description": "momentum x component of the sim track",
        "type": "std::vector<float>",
        "variable": "simtrack_px"
      },
      {
        "description": "momentum y component of the sim track",
        "type": "std::vector<float>",
        "variable": "simtrack_py"
      },
      {
        "description": "momentum z component of the sim track",
        "type": "std::vector<float>",
        "variable": "simtrack_pz"
      },
      {
        "description": "energy of the sim track",
        "type": "std::vector<float>",
        "variable": "simtrack_energy"
      },
      {
        "description": "ID number of the sim vertex of the sim track",
        "type": "std::vector<unsigned int>",
        "variable": "simtrack_vtxid"
      },
      {
        "description": "index of the gen particle associated to the track",
        "type": "std::vector<unsigned int>",
        "variable": "simtrack_genid"
      },
      {
        "description": "event ID of the sim track",
        "type": "std::vector<uint32_t>",
        "variable": "simtrack_evtid"
      },
      {
        "description": "collision ID of the gen particle",
        "type": "std::vector<int>",
        "variable": "genpart_collid"
      },
      {
        "description": "PDG ID of the gen particle",
        "type": "std::vector<int>",
        "variable": "genpart_pdgid"
      },
      {
        "description": "charge of the gen particle",
        "type": "std::vector<int>",
        "variable": "genpart_charge"
      },
      {
        "description": "momentum x component of the gen particle",
        "type": "std::vector<float>",
        "variable": "genpart_px"
      },
      {
        "description": "momentum y component of the gen particle",
        "type": "std::vector<float>",
        "variable": "genpart_py"
      },
      {
        "description": "momentum z component of the gen particle",
        "type": "std::vector<float>",
        "variable": "genpart_px"
      },
      {
        "description": "energy of the gen particle",
        "type": "std::vector<float>",
        "variable": "genpart_energy"
      },
      {
        "description": "PDG status of the gen particle",
        "type": "std::vector<int>",
        "variable": "genpart_status"
      },
      {
        "description": "momentum x component of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_px"
      },
      {
        "description": "momentum y component of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_py"
      },
      {
        "description": "momentum z component of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_pz"
      },
      {
        "description": "energy of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_energy"
      },
      {
        "description": "electromagnetic energy of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_emEnergy"
      },
      {
        "description": "hadronic energy of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_hadEnergy"
      },
      {
        "description": "invisible energy of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_invisibleEnergy"
      },
      {
        "description": "auxiliary energy of the gen jet",
        "type": "std::vector<float>",
        "variable": "genjet_auxiliaryEnergy"
      },
      {
        "description": "collision ID of the constituent of the gen jet",
        "type": "std::vector<std::vector<int> >",
        "variable": "genjet_const_collid"
      },
      {
        "description": "PDG ID of the constituent of the gen jet",
        "type": "std::vector<std::vector<int> >",
        "variable": "genjet_const_pdgid"
      },
      {
        "description": "charge of the constituent of the gen jet",
        "type": "std::vector<std::vector<int> >",
        "variable": "genjet_const_charge"
      },
      {
        "description": "momentum x component of the constituent of the gen jet",
        "type": "std::vector<std::vector<float> >",
        "variable": "genjet_const_px"
      },
      {
        "description": "momentum y component of the constituent of the gen jet",
        "type": "std::vector<std::vector<float> >",
        "variable": "genjet_const_py"
      },
      {
        "description": "momentum z component of the constituent of the gen jet",
        "type": "std::vector<std::vector<float> >",
        "variable": "genjet_const_pz"
      },
      {
        "description": "energy of the constituent of the gen jet",
        "type": "std::vector<std::vector<float> >",
        "variable": "genjet_const_energy"
      },
      {
        "description": "chi2 of the reco track fit",
        "type": "std::vector<float>",
        "variable": "track_chi2"
      },
      {
        "description": "ndof of the reco track fit",
        "type": "std::vector<float>",
        "variable": "track_ndof"
      },
      {
        "description": "reduced chi2 of the reco track fit",
        "type": "std::vector<float>",
        "variable": "track_chi2ndof"
      },
      {
        "description": "charge of the reco track",
        "type": "std::vector<float>",
        "variable": "track_charge"
      },
      {
        "description": "momentum of the reco track",
        "type": "std::vector<float>",
        "variable": "track_momentum"
      },
      {
        "description": "transverse momentum of the reco track",
        "type": "std::vector<float>",
        "variable": "track_pt"
      },
      {
        "description": "error on the transverse momentum of the reco track",
        "type": "std::vector<float>",
        "variable": "track_pterr"
      },
      {
        "description": "number of valid hits in the reco track",
        "type": "std::vector<unsigned int>",
        "variable": "track_hitsvalid"
      },
      {
        "description": "number of lost hits in the reco track",
        "type": "std::vector<unsigned int>",
        "variable": "track_hitslost"
      },
      {
        "description": "theta angle of the reco track",
        "type": "std::vector<float>",
        "variable": "track_theta"
      },
      {
        "description": "error on theta of the reco track",
        "type": "std::vector<float>",
        "variable": "track_thetaerr"
      },
      {
        "description": "phi angle of the reco track",
        "type": "std::vector<float>",
        "variable": "track_phi"
      },
      {
        "description": "error on phi of the reco track",
        "type": "std::vector<float>",
        "variable": "track_phierr"
      },
      {
        "description": "pseudorapidity of the reco track",
        "type": "std::vector<float>",
        "variable": "track_eta"
      },
      {
        "description": "error on pseudorapidity of the reco track",
        "type": "std::vector<float>",
        "variable": "track_etaerr"
      },
      {
        "description": "transverse impact parameter of the reco track",
        "type": "std::vector<float>",
        "variable": "track_dxy"
      },
      {
        "description": "error on the transverse impact parameter of the reco track",
        "type": "std::vector<float>",
        "variable": "track_dxyerr"
      },
      {
        "description": "longitudinal impact parameter of the reco track",
        "type": "std::vector<float>",
        "variable": "track_dsz"
      },
      {
        "description": "error on the longitudinal impact parameter of the reco track",
        "type": "std::vector<float>",
        "variable": "track_dszerr"
      },
      {
        "description": "charge over momentum of the reco track",
        "type": "std::vector<float>",
        "variable": "track_qoverp"
      },
      {
        "description": "error on charge over momentum of the track",
        "type": "std::vector<float>",
        "variable": "track_qoverperr"
      },
      {
        "description": "x position of the vertex of the reco track",
        "type": "std::vector<float>",
        "variable": "track_vx"
      },
      {
        "description": "y position of the vertex of the reco track",
        "type": "std::vector<float>",
        "variable": "track_vy"
      },
      {
        "description": "z position of the vertex of the reco track",
        "type": "std::vector<float>",
        "variable": "track_vz"
      },
      {
        "description": "algorithm type of the reco track",
        "type": "std::vector<Int_t>",
        "variable": "track_algo"
      },
      {
        "description": "global x position of the RecHit associated to the reco track",
        "type": "std::vector<std::vector<float> >",
        "variable": "track_hit_global_x"
      },
      {
        "description": "global y position of the RecHit associated to the reco track",
        "type": "std::vector<std::vector<float> >",
        "variable": "track_hit_global_y"
      },
      {
        "description": "global z position of the RecHit associated to the reco track",
        "type": "std::vector<std::vector<float> >",
        "variable": "track_hit_global_z"
      },
      {
        "description": "local x position of the RecHit associated to the reco track",
        "type": "std::vector<std::vector<float> >",
        "variable": "track_hit_local_x"
      },
      {
        "description": "local y position of the RecHit associated to the reco track",
        "type": "std::vector<std::vector<float> >",
        "variable": "track_hit_local_y"
      },
      {
        "description": "error on local x position of the RecHit associated to the reco track",
        "type": "std::vector<std::vector<float> >",
        "variable": "track_hit_local_x_error"
      },
      {
        "description": "error on local y position of the RecHit associated to the reco track",
        "type": "std::vector<std::vector<float> >",
        "variable": "track_hit_local_y_error"
      },
      {
        "description": "subdetector generating the hit [1 PixelBarrel, 2 PixelEndcap, 3 TIB, 4 TID, 5 TOB, 6 TEC] associated to the reco track",
        "type": "std::vector<std::vector<unsigned int> >",
        "variable": "track_hit_sub_det"
      },
      {
        "description": "layer/disk of the subdetector generating the hit associated to the reco track",
        "type": "std::vector<std::vector<unsigned int> >",
        "variable": "track_hit_layer"
      }
    ],
    "date_created": [
      "2019"
    ],
    "date_published": "2019",
    "distribution": {
      "formats": [
        "root"
      ],
      "number_events": 9430509,
      "number_files": 14825,
      "size": 12827058597346
    },
    "doi": "10.7483/OPENDATA.CMS.CHC3.5KPG",
    "experiment": ["CMS"],
    "files": [
      {
        "checksum": "adler32:bcfd6024",
        "size": 681411,
        "type": "index.json",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/QCD300to600_RunI_8TeV/file-indexes/QCD300to600_RunI_8TeV_step3_QCD300to600_root_file_index.json"
      },
      {
        "checksum": "adler32:a0c569c2",
        "size": 366912,
        "type": "index.txt",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/QCD300to600_RunI_8TeV/file-indexes/QCD300to600_RunI_8TeV_step3_QCD300to600_root_file_index.txt"
      },
      {
        "checksum": "adler32:f81225b4",
        "size": 904998,
        "type": "index.json",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/QCD400to600_RunI_8TeV/file-indexes/QCD400to600_RunI_8TeV_step3_QCD400to600_root_file_index.json"
      },
      {
        "checksum": "adler32:77b6097d",
        "size": 487305,
        "type": "index.txt",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/QCD400to600_RunI_8TeV/file-indexes/QCD400to600_RunI_8TeV_step3_QCD400to600_root_file_index.txt"
      },
      {
        "checksum": "adler32:da23101e",
        "size": 1363728,
        "type": "index.json",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/QCD600to3000_RunI_8TeV/file-indexes/QCD600to3000_RunI_8TeV_step3_QCD600to3000_root_file_index.json"
      },
      {
        "checksum": "adler32:91d081b2",
        "size": 738891,
        "type": "index.txt",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/QCD600to3000_RunI_8TeV/file-indexes/QCD600to3000_RunI_8TeV_step3_QCD600to3000_root_file_index.txt"
      },
      {
        "checksum": "adler32:a8b2ebf6",
        "size": 1069343,
        "type": "index.json",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/ttbar_RunI_8TeV/file-indexes/ttbar_RunI_8TeV_step3_ttbarOD_root_file_index.json"
      },
      {
        "checksum": "adler32:efb6e134",
        "size": 555535,
        "type": "index.txt",
        "uri": "root://eospublic.cern.ch//eos/opendata/cms/datascience/TrackerRecHitProducerTool/ttbar_RunI_8TeV/file-indexes/ttbar_RunI_8TeV_step3_ttbarOD_root_file_index.txt"
      }
    ],
    "keywords": [
      "datascience"
    ],
    "license": {
      "attribution": "CC0"
    },
    "methodology": {
      "description": "This dataset was produced with the software available in:",
      "links": [
        {
          "recid": "12210"
        }
      ]
    },
    "publisher": "CERN Open Data Portal",
    "recid": "12220",
    "relations": [
      {
        "description": "QCD300to600_RunI_8TeV was derived from:",
        "recid": "12201",
        "title": "Trakcer-hit-enriched 300 to 600 bin of QCD_Pt-15to3000_TuneZ2star_Flat_8TeV_pythia6",
        "type": "isChildOf"
      },
      {
        "description": "QCD400to600_RunI_8TeV was derived from:",
        "recid": "12202",
        "title": "Trakcer-hit-enriched 400 to 600 bin of QCD_Pt-15to3000_TuneZ2star_Flat_8TeV_pythia6",
        "type": "isChildOf"
      },
      {
        "description": "QCD600to3000_RunI_8TeV  was derived from:",
        "recid": "12203",
        "title": "Trakcer-hit-enriched 600 to 3000 bin of QCD_Pt-15to3000_TuneZ2star_Flat_8TeV_pythia6",
        "type": "isChildOf"
      },
      {
        "description": "ttbar_RunI_8TeV was derived from:",
        "recid": "12200",
        "title": "Trakcer-hit-enriched TTJets_HadronicMGDecays_8TeV-madgraph",
        "type": "isChildOf"
      }
    ],
    "title": "Samples with full event information including tracker hits for tracking, ML, and top quark tagging studies",
    "type": {
      "primary": "Dataset",
      "secondary": [
        "Derived"
      ]
    },
    "usage": {
      "description": "The use of these files does not require any software specific to the CMS experiment. An <a href=\"https://github.com/cernopendata-datascience/TrackerRecHitMachineLearning\">example notebook</a> is provided. The code reads the ntuples and produces a scatter plot of the rechits from three events."
    }
  }
]
