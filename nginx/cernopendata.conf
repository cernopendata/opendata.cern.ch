# Cache for ''*/files/*'
uwsgi_cache_path /var/cache/nginx/cache_web_files levels=1:2 keys_zone=cache_web_files:100m inactive=60m max_size=1000m use_temp_path=off;

# Cache for anything else than '*/files/*'
uwsgi_cache_path /var/cache/nginx/cache_web_app levels=1:2 keys_zone=cache_web_app:100m inactive=60m max_size=8000m use_temp_path=off;

large_client_header_buffers 8 32k;

upstream web-files {
    server web-files:5000 max_conns=20;
}

upstream web-app {
    server web:5000 max_conns=20;
}

# Disable cache for responses with Content-Length larger than 10000000 bytes:
# Based on https://forum.nginx.org/read.php?2,253260,253662#msg-253662
map $upstream_http_content_length $nocache {
    default 1;
    "~^[1-9]{0,7}$" 0;
}

server {
    listen 80 default;
    server_name _ "";
    server_tokens off;
    charset utf-8;

    # Configure basic logging:
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log error;

    # Allow only GET and HEAD requests methods. This disables unnecessary
    # methods such as CONNECT, DELETE, OPTIONS, PATCH, POST, PUT, TRACE for
    # improved safety.
    if ($request_method !~ ^(GET|HEAD)) {
        return 405;
    }

    # Tell nginx to rewrite URI if the path contains uppercase characters and
    # path doesn't start with '/files/' or with `/records/`.
    # If more paths need to be excluded, add them to the selection group
    # `(files/|record/|static/|eos/)` in the regex-clause.
    # Paths must end with `/`-char.
    # Works correctly only when defined as first location block of the server.
    # Based on https://stackoverflow.com/a/11170826
    location ~ ^/(?!(\b(files/|record/|static/|eos/|glossary/)\b)).*[A-Z] {
        # Simple rewriter that rewrites everything in path to lowercase
        # and continues processing of rewritten URI with internal_redirect.
        # Doesn't update URI displayed in browser
        perl 'sub { my $r = shift; $r->internal_redirect(lc($r->uri)); }';
    }

    location /static {
        root /usr/local/var/cernopendata/var/cernopendata-instance;
    }

    # Old reverse proxy to EOS locations used from COD2 times. (Not advertised
    # much in COD3 times anymore, but it is good to keep it to serve old URLs.)
    location ~* /eos/opendata/(alice|atlas|lhcb|cms|opera)/.*\.(root|tgz|zip)$ {
        proxy_cache off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://eospublichttp.cern.ch;
    }

    # Cache any URL that has '/files/' pattern in it.
    # (e.g. '/records/123/files/abc', '/dataset/test/files/storage/higgs.txt')
    location ~ ^/.+/files/.+ {
        include uwsgi_params;
        uwsgi_pass web-files;
        uwsgi_no_cache $nocache;
        uwsgi_cache cache_web_files;
        uwsgi_cache_key $host$uri$is_args$args;
        uwsgi_cache_valid 200 301 302 30m;
        uwsgi_cache_lock on;
        uwsgi_cache_use_stale updating;
        expires 1h;
        uwsgi_param X-Real-IP $remote_addr;
        uwsgi_param Host $host;
        uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
        uwsgi_param X-Forwarded-Proto $http_x_forwarded_proto;
        uwsgi_ignore_headers Set-Cookie;
    }

    location / {
        include uwsgi_params;
        uwsgi_pass web-app;
        uwsgi_cache cache_web_app;
        uwsgi_cache_key $host$uri$is_args$args;
        uwsgi_cache_valid 200 301 302 30m;
        uwsgi_cache_lock on;
        uwsgi_cache_use_stale updating;
        expires 1h;
        uwsgi_param X-Real-IP $remote_addr;
        uwsgi_param Host $host;
        uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
        uwsgi_param X-Forwarded-Proto $http_x_forwarded_proto;
        uwsgi_ignore_headers Set-Cookie;
    }

}
